#define ICACHECTRL_BASE_ADDR 0x38022080
#define ICACHECTRL_REG_SIZE 0x8
enum {
    __ICACHECTRL_ECCCTRL,
    __ICACHECTRL_ECCIADDR
};
#define ICACHECTRL_ECCCTRL_ADDR  (ICACHECTRL_BASE_ADDR + __ICACHECTRL_ECCCTRL * ICACHECTRL_REG_SIZE)
#define ICACHECTRL_ECCIADDR_ADDR (ICACHECTRL_BASE_ADDR + __ICACHECTRL_ECCIADDR * ICACHECTRL_REG_SIZE)

#define ENABLE_BITS 1
#define ENABLE_OFFSET 0
#define ENABLE (1 << ENABLE_OFFSET)

#define INJECT_BITS 1
#define INJECT_OFFSET (ENABLE_OFFSET + ENABLE_BITS)
#define INJECT (1 << INJECT_OFFSET)

#define ITARGET_BITS 2
#define ITARGET_OFFSET (INJECT_OFFSET + INJECT_BITS)
#define ITARGET_MASK (((1<<ITARGET_BITS)-1) << ITARGET_OFFSET)
typedef enum {
    ITARGET_META,
    ITARGET_RSVD1,
    ITARGET_DATA,
    ITARGET_RSVD3,
} itarget_t;
#define ITARGET_SET(x) ((x) << ITARGET_OFFSET)
#define ITARGET_GET(x) (((x) & ITARGET_MASK) >> ITARGET_OFFSET)

#define ISTATUS_BITS 3
#define ISTATUS_OFFSET (ITARGET_OFFSET + ITARGET_BITS)
#define ISTATUS_MASK (((1<<ISTATUS_BITS)-1) << ISTATUS_OFFSET)
typedef enum {
    ISTATUS_IDLE,
    ISTATUS_WORKING,
    ISTATUS_INJECTED,
    ISTATUS_RSVD3,
    ISTATUS_RSVD4,
    ISTATUS_RSVD5,
    ISTATUS_RSVD6,
    ISTATUS_ERROR,
} istatus_t;
#define ISTATUS_SET(x) ((x) << ISTATUS_OFFSET)
#define ISTATUS_GET(x) (((x) & ISTATUS_MASK) >> ISTATUS_OFFSET)

#define IERROR_BITS 3
#define IERROR_OFFSET (ISTATUS_OFFSET + ISTATUS_BITS)
#define IERROR_MASK (((1<<IERROR_BITS)-1) << IERROR_OFFSET)
typedef enum {
    IERROR_NOT_ENABLED,
    IERROR_TARGET_INVALID,
    IERROR_NOT_FOUND,
    IERROR_RSVD3,
    IERROR_RSVD4,
    IERROR_RSVD5,
    IERROR_RSVD6,
    IERROR_RSVD7,
} ierror_t;

#define IERROR_SET(x) ((x) << IERROR_OFFSET)
#define IERROR_GET(x) (((x) & IERROR_MASK) >> IERROR_OFFSET)
